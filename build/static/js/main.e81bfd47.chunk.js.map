{"version":3,"sources":["AddComponent.js","DeleteComponent.js","App.js","serviceWorker.js","index.js"],"names":["AddComponent","state","show","videoId","description","onVideoAdd","_this","props","handleClose","setState","handleShow","access","window","btoa","prompt","alert","handlePost","length","fetch","method","headers","Content-Type","body","JSON","stringify","then","onIdChange","e","target","value","onDescriptionChange","react_default","a","createElement","Fragment","Button","className","size","variant","onClick","this","Modal","onHide","Header","closeButton","Title","Body","htmlFor","type","id","placeholder","onChange","Footer","React","Component","DeleteComponent","index","onVideoDelete","handleDelete","onChangeValue","console","log","Form","Group","controlId","Label","Control","as","videos","map","videoObj","key","App","loadVideos","res","json","data","onClickHandler","_this2","src_AddComponent","src_DeleteComponent","YouTube","opts","width","playerVars","autoplay","Navbar","fixed","bg","Text","href","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e81bfd47.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\n\n\nclass AddComponent extends React.Component {\n\n    state = {\n        show: false,\n        videoId: '',\n        description: '',\n        //buttonName: ''\n    };\n\n    onVideoAdd = () => {\n        this.props.onVideoAdd();\n    };\n\n    handleClose = () => {\n        this.setState({show: false, videoId: '', description: ''/*, buttonName: ''*/});\n    };\n\n    handleShow = () => {\n        let access = window.btoa(prompt('Пароль?', ''))\n        if (access === 'eXRweWYuZ2Zoamt6') {\n            this.setState({show: true});\n        } else if (access === '') {\n            alert('Вам нужно ввести пароль, чтобы получить доступ к этой функции')\n        } else {\n            alert('Пароль неверен. У Вас нет права добавлять видео')\n        }\n    };\n\n    handlePost = () => {\n        if (this.state.videoId.length && this.state.description.length /*&& this.state.buttonName.length*/) {\n            fetch(\"/api/videos\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    videoId: this.state.videoId,\n                    description: this.state.description,\n                    //name: this.state.buttonName\n                })\n            })\n                .then(() => {\n                    this.handleClose();\n                    this.onVideoAdd();\n                })\n        } else {\n            alert('Не заполнены необходимые поля')\n        }\n    };\n\n    onIdChange = (e) => {\n        this.setState({videoId: e.target.value})\n    };\n\n    onDescriptionChange = (e) => {\n        this.setState({description: e.target.value})\n    };\n\n    /*onBtnNameChange = (e) => {\n        this.setState({buttonName: e.target.value})\n    };*/\n\n    render() {\n        return (\n            <>\n                <Button className='button' size=\"sm\" variant=\"outline-primary\" onClick={this.handleShow}>\n                    Добавить видео\n                </Button>\n\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Новое видео</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"modal-body modall\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"videoID\" className=\"col-form-label\">Введите ID:</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"videoID\"\n                                           placeholder='Video ID' value={this.state.videoId}\n                                           onChange={this.onIdChange}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description\" className=\"col-form-label\">Введите описание\n                                        видео:</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"description\"\n                                           placeholder='Описание' value={this.state.description}\n                                           onChange={this.onDescriptionChange}/>\n                                </div>\n                                {/*\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"button-name\" className=\"col-form-label\">\"Имя\" кнопки:</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"button-name\"\n                                           placeholder='\"Имя\" кнопки' value={this.state.buttonName}\n                                           onChange={this.onBtnNameChange}/>\n                                </div>*/}\n                            </form>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Отмена\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handlePost}>\n                            Добавить\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default AddComponent;","import React from 'react';\nimport {Button, Modal, Form} from \"react-bootstrap\";\n\nclass DeleteComponent extends React.Component {\n    state = {\n        show: false,\n        index: 'default'\n    };\n\n    onVideoDelete = () => {\n        this.props.onVideoDelete()\n    };\n\n\n    handleShow = () => {\n        let access = window.btoa(prompt('Пароль?', ''))\n        if (access === 'eXRweWYuZ2Zoamt6') {\n            this.setState({show: true});\n        } else if (access === '') {\n            alert('Вам нужно ввести пароль, чтобы получить доступ к этой функции')\n        } else {\n            alert('Пароль неверен. У Вас нет права удалять видео')\n        }\n    };\n\n    handleClose = () => {\n        this.setState({show: false});\n    };\n\n    handleDelete = () => {\n        if (this.state.index !== 'defualt') {\n            fetch(\"/api/videos\", {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({index: this.state.index})\n            })\n                .then(() => {\n                    this.handleClose();\n                    this.onVideoDelete();\n                })\n        } else {\n            alert('Сперва выебрите видео')\n        }\n    };\n\n    onChangeValue = (e) => {\n        this.setState({index: e.target.value})\n        console.log(this.state.index)\n    };\n\n    render() {\n        return (\n            <>\n                <Button variant=\"outline-danger\" size=\"sm\" onClick={this.handleShow}>\n                    Удалить видео\n                </Button>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Удаление видео</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"modal-body modall\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <Form.Group controlId=\"videoChoise\">\n                                        <Form.Label>Выберите видео</Form.Label>\n                                        <Form.Control as=\"select\" onChange={this.onChangeValue}\n                                                      value={this.state.index}>\n                                            <option value='default'>***Выберите видео***</option>\n                                            {this.props.videos.map((videoObj, index) =>\n                                                <option key={index} value={index}>\n                                                    {videoObj.description}\n                                                </option>\n                                            )}\n                                        </Form.Control>\n                                    </Form.Group>\n                                </div>\n                            </form>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Отмена\n                        </Button>\n                        <Button variant=\"danger\" onClick={this.handleDelete}>\n                            Удалить\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\n\nexport default DeleteComponent;","import React, {Component} from 'react';\nimport './App.css';\nimport YouTube from 'react-youtube';\nimport AddComponent from './AddComponent.js';\nimport DeleteComponent from './DeleteComponent.js';\nimport {Navbar} from \"react-bootstrap\"\n\nclass App extends Component {\n\n    state = {\n        videoId: '',\n        videos: []\n    };\n\n    componentDidMount() {\n        this.loadVideos()\n    };\n\n    loadVideos = () => {\n        fetch(\"/api/videos\")\n            .then((res) => res.json())\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    videos: data\n                });\n            })\n    };\n\n    componentDidUpdate() {\n        console.log(\"update\")\n    };\n\n    onClickHandler = (videoId) => {\n        this.setState({\n            videoId: videoId\n        })\n    };\n\n    render() {\n\n        const opts = {\n            //height: '56.25%',\n            width: '100%',\n            playerVars: {\n                autoplay: 1\n            }\n        };\n        \n        /* eslint-disable */\n\n        return (\n            <div className='container-fluid App'>\n                <nav className=\"navbar navbar-dark bg-dark\">\n                    <a className = \"navbar-brand\">\n                        AVR Lessons\n                    </a>\n                    <form className='form-inline'>\n                        <AddComponent onVideoAdd={this.loadVideos}/>\n                        <DeleteComponent onVideoDelete={this.loadVideos} videos={this.state.videos}/>\n                    </form>\n                </nav>\n                <div className='row'>\n                    <div className='col-md-2'>\n                        {this.state.videos.map((videoObj, index) =>\n                            <React.Fragment key={index}>\n                                <button className='col myclass btn btn-primary'\n                                        onClick={() => this.onClickHandler(videoObj.videoId)}>\n                                    Начать урок\n                                </button>\n                                <p className='description'>{videoObj.description}</p>\n                            </React.Fragment>\n                        )}\n                    </div>\n                    <div className='col-md-1'>\n                    </div>\n                    <div className='col-md-7'>\n                        <YouTube\n                            videoId={this.state.videoId}\n                            opts={opts}\n                            className='video'\n                        />\n                    </div>\n                </div>\n                <Navbar fixed=\"bottom\" bg=\"dark\" variant=\"dark\">\n                    <Navbar.Text className = 'footer'>\n                        Copyright © 2019 <a href=\"https://github.com/alexandreev1\">Андреев Александр</a>\n                    </Navbar.Text>\n                </Navbar>\n            </div>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}