{"version":3,"sources":["AddComponent.js","DeleteComponent.js","App.js","serviceWorker.js","index.js"],"names":["AddComponent","state","show","videoId","description","onVideoAdd","_this","props","handleClose","setState","handleShow","access","prompt","alert","handlePost","length","fetch","method","headers","Content-Type","body","JSON","stringify","then","onIdChange","e","target","value","onDescriptionChange","react_default","a","createElement","Fragment","Button","className","variant","onClick","this","Modal","onHide","Header","closeButton","Title","Body","htmlFor","type","id","placeholder","onChange","Footer","React","Component","DeleteComponent","index","onVideoDelete","handleDelete","onChangeValue","console","log","Form","Group","controlId","Label","Control","as","videos","map","videoObj","key","App","loadVideos","res","json","data","onClickHandler","_this2","src_AddComponent","src_DeleteComponent","YouTube","opts","width","playerVars","autoplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c458d078.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\n\r\nclass AddComponent extends React.Component {\r\n\r\n    state = {\r\n        show: false,\r\n        videoId: '',\r\n        description: '',\r\n        //buttonName: ''\r\n    };\r\n\r\n    onVideoAdd = () => {\r\n        this.props.onVideoAdd();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false, videoId: '', description: ''/*, buttonName: ''*/});\r\n    };\r\n\r\n    handleShow = () => {\r\n        let access = prompt('Пароль?', '')\r\n        if (access === 'ytpyf.gfhjkz') {\r\n            this.setState({show: true});\r\n        } else if (access === '') {\r\n            alert('Вам нужно ввести пароль, чтобы получить доступ к этой функции')\r\n        } else {\r\n            alert('У Вас нет права добавлять видео')\r\n        }\r\n    };\r\n\r\n    handlePost = () => {\r\n        if (this.state.videoId.length && this.state.description.length /*&& this.state.buttonName.length*/) {\r\n            fetch(\"/api/videos\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    videoId: this.state.videoId,\r\n                    description: this.state.description,\r\n                    //name: this.state.buttonName\r\n                })\r\n            })\r\n                .then(() => {\r\n                    this.handleClose();\r\n                    this.onVideoAdd();\r\n                })\r\n        } else {\r\n            alert('Не заполнены необходимые поля')\r\n        }\r\n    };\r\n\r\n    onIdChange = (e) => {\r\n        this.setState({videoId: e.target.value})\r\n    };\r\n\r\n    onDescriptionChange = (e) => {\r\n        this.setState({description: e.target.value})\r\n    };\r\n\r\n    /*onBtnNameChange = (e) => {\r\n        this.setState({buttonName: e.target.value})\r\n    };*/\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button className='button' variant=\"primary\" onClick={this.handleShow}>\r\n                    Добавить видео\r\n                </Button>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Новое видео</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"modal-body modall\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"videoID\" className=\"col-form-label\">Введите ID:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"videoID\"\r\n                                           placeholder='Video ID' value={this.state.videoId}\r\n                                           onChange={this.onIdChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description\" className=\"col-form-label\">Введите описание\r\n                                        видео:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"description\"\r\n                                           placeholder='Описание' value={this.state.description}\r\n                                           onChange={this.onDescriptionChange}/>\r\n                                </div>\r\n                                {/*\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"button-name\" className=\"col-form-label\">\"Имя\" кнопки:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"button-name\"\r\n                                           placeholder='\"Имя\" кнопки' value={this.state.buttonName}\r\n                                           onChange={this.onBtnNameChange}/>\r\n                                </div>*/}\r\n                            </form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Отмена\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handlePost}>\r\n                            Добавить\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddComponent;","import React from 'react';\r\nimport {Button, Modal, Form} from \"react-bootstrap\";\r\n\r\nclass DeleteComponent extends React.Component {\r\n    state = {\r\n        show: false,\r\n        index: 'default'\r\n    };\r\n\r\n    onVideoDelete = () => {\r\n        this.props.onVideoDelete()\r\n    };\r\n\r\n\r\n    handleShow = () => {\r\n        let access = prompt('Пароль?', '')\r\n        if (access === 'ytpyf.gfhjkz') {\r\n            this.setState({show: true});\r\n        } else if (access === '') {\r\n            alert('Вам нужно ввести пароль, чтобы получить доступ к этой функции')\r\n        } else {\r\n            alert('У Вас нет права удалять видео')\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false});\r\n    };\r\n\r\n    handleDelete = () => {\r\n        if (this.state.index !== 'defualt') {\r\n            fetch(\"/api/videos\", {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({index: this.state.index})\r\n            })\r\n                .then(() => {\r\n                    this.handleClose();\r\n                    this.onVideoDelete();\r\n                })\r\n        } else {\r\n            alert('Сперва выебрите видео')\r\n        }\r\n    };\r\n\r\n    onChangeValue = (e) => {\r\n        this.setState({index: e.target.value})\r\n        console.log(this.state.index)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button variant=\"danger\" onClick={this.handleShow}>\r\n                    Удалить видео\r\n                </Button>\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Удаление видео</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"modal-body modall\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <Form.Group controlId=\"videoChoise\">\r\n                                        <Form.Label>Выберите видео</Form.Label>\r\n                                        <Form.Control as=\"select\" onChange={this.onChangeValue}\r\n                                                      value={this.state.index}>\r\n                                            <option value='default'>***Выберите видео***</option>\r\n                                            {this.props.videos.map((videoObj, index) =>\r\n                                                <option key={index} value={index}>\r\n                                                    {videoObj.description}\r\n                                                </option>\r\n                                            )}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Отмена\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={this.handleDelete}>\r\n                            Удалить\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DeleteComponent;","import React, {Component} from 'react';\nimport './App.css';\nimport YouTube from 'react-youtube';\nimport AddComponent from './AddComponent.js';\nimport DeleteComponent from './DeleteComponent.js';\n\nclass App extends Component {\n\n    state = {\n        videoId: '',\n        videos: []\n    };\n\n    componentDidMount() {\n        this.loadVideos()\n    };\n\n    loadVideos = () => {\n        fetch(\"/api/videos\")\n            .then((res) => res.json())\n            .then(data => {\n                console.log(data);\n                this.setState({\n                    videos: data\n                });\n            })\n    };\n\n    componentDidUpdate() {\n        console.log(\"update\")\n    };\n\n    onClickHandler = (videoId) => {\n        this.setState({\n            videoId: videoId\n        })\n    };\n\n    render() {\n\n        const opts = {\n            //height: '56.25%',\n            width: '100%',\n            playerVars: {\n                autoplay: 1\n            }\n        };\n\n        return (\n            <div className='container-fluid App'>\n                <div className='navbar navbar-dark bg-dark'>\n                    <a className='navbar-brend'>\n                        AVR Lessons\n                    </a>\n                    <form className='form-inline'>\n                        <AddComponent onVideoAdd={this.loadVideos}/>\n                        <DeleteComponent onVideoDelete={this.loadVideos} videos={this.state.videos}/>\n                    </form>\n                </div>\n                <div className='row'>\n                    <div className='col-md-2'>\n                        {this.state.videos.map((videoObj, index) =>\n                            <React.Fragment key={index}>\n                                <button className='col myclass btn btn-primary'\n                                        onClick={() => this.onClickHandler(videoObj.videoId)}>\n                                    Начать урок\n                                </button>\n                                <p className='description'>{videoObj.description}</p>\n                            </React.Fragment>\n                        )}\n                    </div>\n                    <div className='col-md-1'>\n                    </div>\n                    <div className='col-md-7'>\n                        <YouTube\n                            videoId={this.state.videoId}\n                            opts={opts}\n                            className='video'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}